apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-proxy-config
  labels:
    {{- include "registryProxy.labels" . | nindent 4 }}
data:
  nginx.conf: |
    user www-data;
    worker_processes {{ .Values.registryProxy.config.workerProcesses }};
    pid /run/nginx.pid;
    include /etc/nginx/modules-enabled/*.conf;
    events {
        worker_connections {{ .Values.registryProxy.config.workerConnections }};
    }
    http {
        server_tokens off;
        ignore_invalid_headers off;
        client_max_body_size 0;
        log_format proxylog '$remote_addr\t$http_x_chutes_hotkey\t[$time_local] ($request_time) '
                    '"$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $content_length';
        server {
            access_log {{ .Values.registryProxy.config.accessLogPath }} proxylog;
            sendfile on;
            tcp_nopush on;
            listen {{ .Values.registryProxy.service.port }};
        
            location /v2/ {
                limit_except GET {
                    deny all;
                }
                proxy_pass http://registry:{{ .Values.registry.service.port }};
                auth_request /auth;
                proxy_set_header Authorization $auth_resp_authorization;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
        
            location = /auth {
                internal;
                proxy_pass http://api:{{ .Values.api.service.port }}/registry/auth;
                auth_request_set $auth_resp_authorization $upstream_http_authorization;
                proxy_pass_request_body off; 
                proxy_set_header Content-Length "";
                error_page 401 403 500 502 503 504 = @block;
            }
        
            location @block {
                return 401;
            }
        }
    }
